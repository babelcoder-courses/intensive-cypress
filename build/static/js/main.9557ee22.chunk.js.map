{"version":3,"sources":["SearchBox.tsx","TodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBox","placeholder","buttonText","onSearch","useState","keyword","setKeyword","value","onChange","event","target","onClick","TODOS_URL","TodoList","todos","setTodos","fetchTodos","useCallback","a","axios","get","data","useEffect","map","todo","title","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA6BeA,EArBG,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,SAC5C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OACE,qCACE,uBACEL,YAAaA,EACbM,MAAOF,EACPG,SAXgB,SAACC,GACrBH,EAAWG,EAAMC,OAAOH,UAYtB,wBAAQI,QATG,kBAAMR,EAASE,IAS1B,SAA0BH,Q,yCCnB1BU,EAAY,6CAgCHC,EA1BE,SAAC,GAAgC,IAA9BR,EAA6B,EAA7BA,QAClB,EAA0BD,mBAAiB,IAA3C,mBAAOU,EAAP,KAAcC,EAAd,KAEMC,EAAaC,sBAAW,sBAAC,8BAAAC,EAAA,sEACCC,IAAMC,IAClCf,EAAO,UAAMO,EAAN,cAAqBP,GAAYO,GAFb,gBACfE,EADe,EACrBO,KAIRN,EAASD,GALoB,2CAM5B,CAACT,IAMJ,OAJAiB,qBAAU,WACRN,MACC,CAACA,IAGF,6BACGF,EAAMS,KAAI,SAACC,GAAD,OACT,6BACGA,EAAKC,OADCD,EAAKE,UCTPC,MAff,WACE,MAA8BvB,mBAAiB,IAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,qCACE,cAAC,EAAD,CACEL,YAAY,qBACZC,WAAW,SACXC,SAAU,SAACE,GAAD,OAAaC,EAAWD,MAEpC,cAAC,EAAD,CAAUA,QAASA,QCDVuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9557ee22.chunk.js","sourcesContent":["import { ChangeEvent, useState } from 'react';\n\ntype SearchBoxProps = {\n  placeholder: string;\n  buttonText: string;\n  onSearch: (keyword: string) => void;\n};\n\nconst SearchBox = ({ placeholder, buttonText, onSearch }: SearchBoxProps) => {\n  const [keyword, setKeyword] = useState('');\n\n  const changeKeyword = (event: ChangeEvent<HTMLInputElement>) => {\n    setKeyword(event.target.value);\n  };\n\n  const search = () => onSearch(keyword);\n\n  return (\n    <>\n      <input\n        placeholder={placeholder}\n        value={keyword}\n        onChange={changeKeyword}\n      />\n      <button onClick={search}>{buttonText}</button>\n    </>\n  );\n};\n\nexport default SearchBox;\n","import axios from 'axios';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport { Todo } from './Todo';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\ntype TodoListProps = {\n  keyword?: string;\n};\n\nconst TodoList = ({ keyword }: TodoListProps) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const fetchTodos = useCallback(async () => {\n    const { data: todos } = await axios.get<Todo[]>(\n      keyword ? `${TODOS_URL}?q=${keyword}` : TODOS_URL\n    );\n\n    setTodos(todos);\n  }, [keyword]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  return (\n    <ul data-testid=\"todo-list\">\n      {todos.map((todo) => (\n        <li key={todo.id} data-testid=\"todo-item\">\n          {todo.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import { useState } from 'react';\n\nimport SearchBox from './SearchBox';\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [keyword, setKeyword] = useState<string>('');\n\n  return (\n    <>\n      <SearchBox\n        placeholder=\"Enter a keyword...\"\n        buttonText=\"Search\"\n        onSearch={(keyword) => setKeyword(keyword)}\n      ></SearchBox>\n      <TodoList keyword={keyword} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}